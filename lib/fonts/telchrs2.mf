% This file is part of the TeluguTeX Software Package.
%Copyright (c) 1991 Lakshmankumar Mukkavilli
%
%The TeluguTeX Software Package is distributed in the hope that
%it will be useful,but WITHOUT ANY WARRANTY.  No author or distributor
%accepts responsibility to anyone for the consequences of using it
%or for whether it serves any particular purpose or works at all,
%unless he says so in writing.  Refer to the TeluguTeX Software Package
%General Public License for full details.
%
%Everyone is granted permission to copy, modify and redistribute
%the TeluguTeX Software Package, but only under the conditions described in the
%TeluguTeX Software Package General Public License.   A copy of this license is
%supposed to have been given to you along with TeluguTeX Software Package so you
%can know your rights and responsibilities.  It should be in a
%file named CopyrightLong.  Among other things, the copyright notice
%and this notice must be preserved on all copies.  
%%%%%
% This file contains code to generate 
%  symbols for Consonant + Vowel's that need special handling

stest(cvku); telchar "consonant+vowel ka+u";
begintchar(cv_ku_code,cb_ka_width#,asc_height#,0,0,0,0);
cb_ka_form;
vm_a_form(2);
z20=(cb_ka_width+u,w_height);
vm_u_form(20); erase sketch vm_u_p;
sketch  cb_ka_p..vm_u_p;w:=rt x20b;
pivot_message(x20d);
endtchar; etest;

stest(cvkhe); telchar "consonant+vowel  kha+e";
begintchar(cv_khe_code,cb_kha_width#,vm_e_height1#,wedge_depth#,0,0,0);
cb_kha_form;erase sketch cb_kha_p;
vm_e_form_a(cb_kha_width/2); sketch (subpath (0,9) of cb_kha_p)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvkhao); telchar "consonant+vowel  kha+ao";
begintchar(cv_khao_code,cb_kha_width#,vm_e_height1#,wedge_depth#,0,0,0);
cb_kha_form;erase sketch cb_kha_p;
vm_ao_form(17,cb_kha_width/2);
sketch (subpath (0,9) of cb_kha_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x17i);
endtchar; etest;

stest(cvge); telchar "consonant+vowel ga+e";
begintchar(cv_ge_code,cb_ga_width#,vm_e_height3#,0,0,0,0);
cb_ga_form;
sketch cv_ge_p;
pivot_message(x31);
endtchar; etest;

stest(cvngu);  telchar "consonant+vowel nga+u";
begintchar(cv_ngu_code,cb_ja_width#/2,x_height#,0,0,0,0);
cv_ngu_form;
endtchar; etest;

stest(cvnguu);  telchar "consonant+vowel nga+uu";
begintchar(cv_nguu_code,cb_ja_width#/2,x_height#,0,0,0,0);
cv_ngu_form;
barandhook_forma(4,3/4vmwidth,5);
w:=rt x4b;
endtchar; etest;

stest(cvche); telchar "consonant+vowel  cha+e";
begintchar(cv_che_code,cb_cha_width#,vm_e_height1#,0,0,0,0);
cb_cha_form; erase sketch cb_cha_p;
vm_e_form_a(cb_cha_width/2);
sketch (subpath(0,6) of cb_cha_p)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvchao); telchar "consonant+vowel  cha+ao";
begintchar(cv_chao_code,cb_cha_width#,vm_e_height1#,0,0,0,0);
cb_cha_form; erase sketch cb_cha_p;
vm_ao_form(11,cb_cha_width/2);
sketch (subpath (0,6) of cb_cha_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvcche); telchar "consonant+vowel ccha+e";
begintchar(cv_cche_code,cb_cha_width#,vm_e_height1#,wedge_depth#,0,0,0);
cb_cha_form; erase sketch cb_cha_p;
vm_e_form_a(cb_cha_width/2);
sketch (subpath(0,6) of cb_cha_p)..vm_e_pa;
z10 = 1/2[rt z5,z5];
wedge(10);
pivot_message(x999);
endtchar; etest;

stest(cvcchao); telchar "consonant+vowel ccha+ao";
begintchar(cv_cchao_code,cb_cha_width#,vm_e_height1#,wedge_depth#,0,0,0);
cb_cha_form; erase sketch cb_cha_p;
vm_ao_form(11,cb_cha_width/2);
sketch (subpath (0,6) of cb_cha_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
z10 = 1/2[rt z5,z5];
wedge(10);
pivot_message(x11i);
endtchar; etest;

stest(cvje); telchar "consonant+vowel ja+e";
begintchar(cv_je_code,cb_ja_width#,vm_e_height1#,0,0,0,0);
cb_ja_form;vm_e_form_a(0.8cb_ja_width);
sketch (subpath (0,1) of cb_ja_pb)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvju);  telchar "consonant+vowel ja+u";
begintchar(cv_ju_code,cb_ja_width#/2,x_height#,0,0,0,0);
cv_ju_form;
endtchar; etest;

stest(cvjuu);  telchar "consonant+vowel ja+uu";
begintchar(cv_juu_code,cb_ja_width#/2,x_height#,0,0,0,0);
cv_ju_form;
barandhook_forma(4,3/4vmwidth,5);
w:=rt x4b;
endtchar; etest;

stest(cvjao); telchar "consonant+vowel ja+ao";
begintchar(cv_jao_code,cb_ja_width#,vm_e_height1#,0,0,0,0);
cb_ja_form;
vm_ao_form(11,0.65cb_ja_width);
sketch (subpath (0,2) of cb_ja_pb)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvttao); telchar "consonant+vowel tta+ao";
begintchar(cv_ttao_code,cb_tta_width#,x_height#,0,0,0,0);
cb_tta_form;
vwedge(18);
vm_ao_form(16,cb_tta_width/2);
sketch cb_tta_p..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
h:=max(top y18a,h);
pivot_message(x16i);
endtchar; etest;

stest(cvtthe); telchar "consonant+vowel ttha+e";
begintchar(cv_tthe_code,cb_ra_width#,vm_e_height3#,0,0,0,0);
cb_ra_form;
sketch cv_re_p;
z10 = (x1,1/2x_height);
fill_dot(10);
pivot_message(x31);
endtchar; etest;

stest(cvddu);  telchar "consonant+vowel dda+u";
begintchar(cv_ddu_code,v_u_width#,asc_height#,0,0,0,0);
v_u_form;z14=((x8+x9)/2,y8);vm_a_form(14);
vm_u_form(3); w:=rt x3b+4u/10;
pivot_message(x3d);
endtchar; etest;

stest(cvddhu); telchar "consonant+vowel ddha+u";
begintchar(cv_ddhu_code,v_u_width#,asc_height#,wedge_depth#,0,0,0);
v_u_form;z14=((x8+x9)/2,y8);vm_a_form(14);
z12=3/4[rt z5,z5];
wedge(12);
vm_u_form(3); w:=rt x3b;
pivot_message(x3d);
endtchar; etest;

stest(cvte); telchar "consonant+vowel ta+e";
begintchar(cv_te_code,cb_ta_width#,vm_e_height1#,0,0,0,0);
cb_ta_form;
vm_e_form_a(3/5cb_ta_width);
 sketch (subpath (0,10) of cb_ta_p)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvtao); telchar "consonant+vowel ta+ao";
begintchar(cv_tao_code,cb_ta_width#,vm_e_height1#,0,0,0,0);
cb_ta_form;
vm_ao_form(11,2.2/5cb_ta_width);
sketch (subpath (0,10) of cb_ta_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvthe); telchar "consonant+vowel tha+e";
begintchar(cv_the_code,cb_da_width#,vm_e_height3#,wedge_depth#,0,0,0);
cb_da_form;
sketch cv_de_p;
wedge(4);
z10 = (x1,2/3x_height-uh);
fill_dot(10);
pivot_message(x31);
endtchar; etest;

stest(cvde); telchar "consonant+vowel da+e";
begintchar(cv_de_code,cb_da_width#,vm_e_height3#,0,0,0,0);
cb_da_form;
sketch cv_de_p;
pivot_message(x31);
endtchar; etest;

stest(cvdhe); telchar "consonant+vowel dha+e";
begintchar(cv_dhe_code,cb_da_width#,vm_e_height3#,wedge_depth#,0,0,0);
cb_da_form;
sketch cv_de_p;
wedge(4);
pivot_message(x31);
endtchar; etest;

stest(cvne);telchar "consonant+vowel  na+e";
begintchar(cv_ne_code,cb_na_width#,vm_e_height1#,0,0,0,0);
cb_na_form;
vm_e_form_a(cb_na_width/2);
sketch (subpath (0,4) of cb_na_p)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvnao);telchar "consonant+vowel  na+ao";
begintchar(cv_nao_code,cb_na_width#,vm_e_height1#,0,0,0,0);
cb_na_form;
vm_ao_form(11,0.4cb_na_width);
sketch (subpath (0,4) of cb_na_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvpaa); telchar "consonant+vowel pa+aa";
begintchar(cv_paa_code,cb_va_width#,asc_height#,0,0,0,0);
cb_va_form;
sketch cv_paa_p;
pivot_message(x2,x22);% x22 is used for alligning au modifier
endtchar; etest;

stest(cvpu);  telchar "consonant+vowel pa+u";
begintchar(cv_pu_code,cv_pu_width#,x_height#,cv_pu_depth#,0,0,0);
cv_pu_form;
pivot_message(x1);
endtchar; etest;

stest(ccvpu);  telchar "consonant conjunct of pa + vowel u";
begintchar(ccv_pu_code,cb_va_width#,top_height#,0,0,ul#,0);
cb_va_form;
sketch subpath(0,3.4) of cb_va_p;
cc_clear; cc_transform(((subpath(0,2) of cb_va_p)..z97));
numeric na,nb;
(na,nb)=cc_transformed_path intersectiontimes
                        ((0,w_height)..(cb_va_width,w_height));
z10=point na of cc_transformed_path;
vm_u_form(10);
cc_transform(lit_cir_p);
cc_whd(1,0);
w:=rt x10b;
endtchar; etest;

stest(cvpuu);  telchar "consonant+vowel pa+uu";
begintchar(cv_puu_code,cv_pu_width#,x_height#,cv_pu_depth#,0,0,0);
cv_pu_form;barandhook_forma(4,3/4vmwidth,5);
w:=rt x4b;
pivot_message(x1);
endtchar; etest;

stest(ccvpuu);  telchar "consonant conjunct of pa + vowel uu";
begintchar(ccv_puu_code,cb_va_width#,top_height#,0,0,ul#,0);
cb_va_form;
sketch subpath(0,3.4) of cb_va_p;
cc_clear; cc_transform(((subpath(0,2) of cb_va_p)..z97));
numeric na,nb;
(na,nb)=cc_transformed_path intersectiontimes
                        ((0,w_height)..(cb_va_width,w_height));
z10=point na of cc_transformed_path;
vm_u_form(10);barandhook_forma(10d,vmwidth,5); 
cc_transform(lit_cir_p);
cc_whd(1,0);
w:= rt x10d.b; 
endtchar; etest;

stest(cvphaa); telchar "consonant+vowel pha+aa";
begintchar(cv_phaa_code,cb_va_width#,asc_height#,wedge_depth#,0,0,0);
cb_va_form;
sketch cv_paa_p;
top z13 = 1/2[rt z1,z1];
wedge(13);
pivot_message(x2,x22); %x22 is used for alligning au modifier
endtchar; etest;

stest(ccvphu); telchar "consonant conjunct of pha + vowel u";
begintchar(ccv_phu_code,cb_va_width#,x_height#,0,0,ul#,0);
cb_va_form;
sketch subpath(0,3.4) of cb_va_p;
top z10 = 1/2[rt z1,z1];
wedge(10);
cc_clear; cc_transform(((subpath(0,2) of cb_va_p)..z97));
numeric na,nb;
(na,nb)=cc_transformed_path intersectiontimes
                        ((0,w_height)..(cb_va_width,w_height));
z11=point na of cc_transformed_path;
vm_u_form(11);
cc_transform(lit_cir_p);cc_transform(wedge_p); cc_whd(1,1);
w:=rt x11b;
endtchar; etest;

stest(ccvphuu); telchar "consonant conjunct of pha + vowel uu";
begintchar(ccv_phuu_code,cb_va_width#,x_height#,0,0,ul#,0);
cb_va_form;
sketch subpath(0,3.4) of cb_va_p;
top z10 = 1/2[rt z1,z1];
wedge(10);
cc_clear; cc_transform(((subpath(0,2) of cb_va_p)..z97));
numeric na,nb;
(na,nb)=cc_transformed_path intersectiontimes
                        ((0,w_height)..(cb_va_width,w_height));
z11=point na of cc_transformed_path;
vm_u_form(11);barandhook_forma(11d,vmwidth,5);
cc_transform(lit_cir_p);cc_transform(wedge_p); cc_whd(1,1);
w:=rt x11d.b; 
endtchar; etest;

stest(cvbe);  telchar "consonant+vowel  ba+e";
begintchar(cv_be_code,cb_ba_width#,vm_e_height1#,0,0,0,0);
cb_ba_form;erase sketch cb_ba_p;
vm_e_form_a(cb_ba_width/2);
sketch (subpath(0,7) of cb_ba_p)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvbao);  telchar "consonant+vowel  ba+ao";
begintchar(cv_bao_code,cb_ba_width#,vm_e_height1#,0,0,0,0);
cb_ba_form;erase sketch cb_ba_p;
vm_ao_form(11,cb_ba_width/2);
sketch (subpath (0,7) of cb_ba_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvbhe); telchar "consonant+vowel bha+e";
begintchar(cv_bhe_code,cb_ba_width#,vm_e_height1#,wedge_depth#,0,0,0);
cb_ba_form;erase sketch cb_ba_p;
vm_e_form_a(cb_ba_width/2);
sketch (subpath(0,7) of cb_ba_p)..vm_e_pa;
wedge(6);
pivot_message(x999);
endtchar; etest;

stest(cvbhao); telchar "consonant+vowel bha+ao";
begintchar(cv_bhao_code,cb_ba_width#,vm_e_height1#,wedge_depth#,0,0,0);
cb_ba_form;erase sketch cb_ba_p;
vm_ao_form(11,cb_ba_width/2);
sketch (subpath (0,7) of cb_ba_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
wedge(6);
pivot_message(x11i);
endtchar; etest;

stest(cvre); telchar "consonant+vowel ra+e";
begintchar(cv_re_code,cb_ra_width#,vm_e_height3#,0,0,0,0);
cb_ra_form;
sketch cv_re_p;
pivot_message(x31);
endtchar; etest;

stest(cvle); telchar "consonant+vowel la+e";
begintchar(cv_le_code,cb_la_width#,vm_e_height1#,0,0,0,0);
cb_la_form;
vm_e_form_a(0.6cb_la_width);
sketch (subpath(0,6) of cb_la_p)..vm_e_pa;
pivot_message(x999);
endtchar; etest;
 
stest(cvlao); telchar "consonant+vowel la+ao";
begintchar(cv_lao_code,cb_la_width#,vm_e_height1#,0,0,0,0);
cb_la_form;
vm_ao_form(11,0.6cb_la_width);
sketch (subpath (0,6) of cb_la_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;
 
stest(cvlle); telchar "consonant+vowel lla+e";
begintchar(cv_lle_code,cb_lla_width#,vm_e_height1#,0,0,0,0);
 cb_lla_form; erase sketch cb_lla_pa;
vm_e_form_a(cb_lla_width/2);
sketch (subpath(0,6) of cb_lla_pa)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvllu); telchar "consonant+vowel lla+u";
begintchar(cv_llu_code,cb_lla_width#,asc_height#,0,0,0,0);
 cb_lla_form;vm_a_form(10);
vm_u_form(12); w:=rt x12b;
pivot_message(lft x12d);
endtchar; etest;

stest(cvllao); telchar "consonant+vowel lla+ao";
begintchar(cv_llao_code,cb_lla_width#,vm_e_height1#,0,0,0,0);
 cb_lla_form; erase sketch cb_lla_pa;
vm_ao_form(11,cb_lla_width/2);
sketch (subpath (0,6) of cb_lla_pa)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvve); telchar "consonant+vowel va+e";
begintchar(cv_ve_code,cb_va_width#,vm_e_height1#,0,0,0,0);
cb_va_form;
vm_e_form_a(cb_va_width/2);
sketch (subpath(0,2) of cb_va_p)..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvvao); telchar "consonant+vowel va+ao";
begintchar(cv_vao_code,cb_va_width#,vm_e_height1#,0,0,0,0);
cb_va_form;
vm_ao_form(11,0.4cb_va_width);
sketch (subpath (0,2) of cb_va_p)..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvce); telchar "consonant+vowel ca+e";
begintchar(cv_ce_code,cb_ca_width#,vm_e_height1#,0,0,0,0);
 cb_ca_form; erase sketch cb_ca_p;
vm_e_form_a(cb_ca_width/3);
sketch (subpath(0,6) of cb_ca_p){up}..vm_e_pa;
pivot_message(x999);
endtchar; etest;

stest(cvcao); telchar "consonant+vowel ca+ao";
begintchar(cv_cao_code,cb_ca_width#,vm_e_height1#,0,0,0,0);
 cb_ca_form; erase sketch cb_ca_p;
vm_ao_form(11,cb_ca_width/3);
sketch (subpath (0,6) of cb_ca_p){up}..subpath (1,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
pivot_message(x11i);
endtchar; etest;

stest(cvshaa); telchar "consonant+vowel sha+aa";
begintchar(cv_shaa_code,cb_sha_width#,asc_height#,wedge_depth#,0,0,0);
cb_va_form;
sketch cv_paa_p;
bot rt z25 = (cb_sha_width,-d);
sketch bot z3{down}..{right}z25;
pivot_message(x2,x22); %x22 used for alligning au modifier
endtchar; etest;

stest(cvshu); telchar "consonant+vowel sha+u";
begintchar(cv_shu_code,cb_va_width#,asc_height#,1.25wedge_depth#,0,0,0);
cb_va_form;
sketch subpath(0,3.4) of cb_va_p;
top z30=(x1,x_height);vm_a_form(30);
bot rt z25 = (cb_sha_width,-d);
sketch bot z3{down}..{right}z25;
 vm_u_form(3);w:=rt x3b;
pivot_message(lft x3d);
endtchar; etest;

stest(cvsaa); telchar "consonant+vowel sa+aa";
begintchar(cv_saa_code,cb_na_width#,asc_height#,0,0,0,0);
cb_na_form;top z20=(w/2,h);
path cv_saa_p;
cv_saa_p=subpath (0,4) of cb_na_p..z20;
sketch cv_saa_p;
numeric aa; aa= (x3+x4)/2;
numeric na,nb;
(na,nb)=cv_saa_p intersectiontimes
                        ((0,asc_height2)..(cb_na_width,asc_height2));
z21=point na of cv_saa_p;
pivot_message(aa,x21); %x21 is used for alligning au modifier
endtchar; etest;

stest(cvhaa); telchar "consonant+vowel ha+aa";
begintchar(cv_haa_code,cb_va_width#+vmwidth#,asc_height#,0,0,0,0);
cb_va_form;
z10 = point 3.6 of cb_va_p;
top z11 = (x10,x_height);
sketch subpath(0,3) of cb_va_p..z11;
barandhook_forma(11,vmwidth,5);
vm_a_form(5);vm_hook_form(11e,3);
w:=max(rt x11e.c,rt x11b);
endtchar; etest;

stest(cvhao); telchar "consonant+vowel ha+ao";
begintchar(cv_hao_code,cb_va_width#+vmwidth#,asc_height#,0,0,0,0);
cb_va_form;
z10 = point 3.6 of cb_va_p;
top z11 = (x10,x_height);
sketch subpath(0,3) of cb_va_p..z11;
barandhook_forma(11,vmwidth,4);
numeric oldh;
vm_a_form(5);erase sketch barandhook_p;oldh:=h;
vm_ao_form(12,0.63w); sketch barandhook_p..subpath (2,3) of vm_ao_pa;
sketch subpath (0,5) of vm_ao_pb;
h:=max(h,oldh);
pivot_message(x12i);
endtchar; etest;

stest(cvkshu); telchar "consonant+vowel ksha+u";
begintchar(cv_kshu_code,cb_ka_width#,asc_height#,cb_ksha_depth#,0,0,0);
cb_ksha_form;
vm_a_form(2);
z20=(cb_ka_width+u,w_height);
vm_u_form(20); erase sketch vm_u_p;
sketch  cb_ka_p..vm_u_p; w := rt x20b;
pivot_message(x20d);
endtchar; etest;

